.TH "includes/funciones_servidor.h" 3 "Domingo, 7 de Mayo de 2017" "Version 3.0" "Practica RedesII" \" -*- nroff -*-
.ad l
.nh
.SH NAME
includes/funciones_servidor.h \- 
.PP
funciones referidas a los comandos  

.SH SYNOPSIS
.br
.PP
\fC#include <redes2/irc\&.h>\fP
.br
\fC#include <arpa/inet\&.h>\fP
.br
\fC#include 'config\&.h'\fP
.br
\fC#include 'red_servidor\&.h'\fP
.br

.SS "Estructuras de datos"

.in +1c
.ti -1c
.RI "struct \fB_datosMensaje\fP"
.br
.in -1c
.SS "'defines'"

.in +1c
.ti -1c
.RI "#define \fBCOM_OK\fP   0"
.br
.ti -1c
.RI "#define \fBCOM_ERROR\fP   -1"
.br
.ti -1c
.RI "#define \fBCOM_QUIT\fP   -2"
.br
.ti -1c
.RI "#define \fBFMOTD\fP   'misc/\fBmotd\fP'"
.br
.ti -1c
.RI "#define \fBMOTD_SCRIPT\fP   'misc/motd\&.bash'"
.br
.ti -1c
.RI "#define \fBFMOTDOFFENSIVE\fP   'misc/motdoffensive'"
.br
.in -1c
.SS "'typedefs'"

.in +1c
.ti -1c
.RI "typedef struct \fB_datosMensaje\fP \fBDatosMensaje\fP"
.br
.ti -1c
.RI "typedef struct \fB_datosMensaje\fP * \fBpDatosMensaje\fP"
.br
.ti -1c
.RI "typedef \fBstatus\fP(* \fBArrayComandos\fP )(char *, \fBpDatosMensaje\fP)"
.br
.in -1c
.SS "Funciones"

.in +1c
.ti -1c
.RI "void \fBliberarEstructuras\fP (void)"
.br
.RI "\fILibera estructuras antes de cerrar servidor\&. \fP"
.ti -1c
.RI "void * \fBmanejaMensaje\fP (void *pdesc)"
.br
.RI "\fIParsea el mensaje recibido\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBprocesaComando\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fISelecciona comando del array a ejecutar\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBnuevaConexion\fP (int desc, struct sockaddr_in *address)"
.br
.RI "\fICrea una nueva conexion\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBcerrarConexion\fP (int socket)"
.br
.RI "\fICierra una conexion\&. \fP"
.ti -1c
.RI "void \fBliberaDatosMensaje\fP (\fBpDatosMensaje\fP datos)"
.br
.RI "\fILibera informacion del mensaje\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBliberarUserData\fP (char *\fBuser\fP, char *\fBnick\fP, char *real, char *host, char *IP, char *\fBaway\fP)"
.br
.RI "\fIInicializa rutina ping-pong\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBrutinaPingPong\fP (void)"
.br
.ti -1c
.RI "\fBstatus\fP \fBcrea_comandos\fP (void)"
.br
.RI "\fIInicializa el array de comandos\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBnick\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando NICK\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBuser\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando USER\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBjoin\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando JOIN\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBlist\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando LIST\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBwhois\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando WHOIS\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBnames\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando NAMES\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBprivmsg\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando PRIVMSG\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBping\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando PING\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBpong\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando PONG\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBpart\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando PART\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBtopic\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando TOPIC\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBkick\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando KICK\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBaway\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando AWAY\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBmode\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando MODE\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBquit\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando QUIT\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBmotd\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando MOTD\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBwho\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando WHO\&. \fP"
.ti -1c
.RI "\fBstatus\fP \fBcomandoVacio\fP (char *comando, \fBpDatosMensaje\fP datos)"
.br
.RI "\fIEjecuta el comando NO_COMMAND\&. \fP"
.ti -1c
.RI "void \fBenviarMensajeACanal\fP (int sckfd, char *mensaje, char *canal, char *nickorigin)"
.br
.RI "\fIFuncion auxilar del comando PRIVMSG\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBArrayComandos\fP \fBcomandos\fP [IRC_MAX_COMMANDS]"
.br
.in -1c
.SH "Descripción detallada"
.PP 
funciones referidas a los comandos 


.SH "AUTHOR"
.PP
Pablo Marcos pablo.marcos@estudiante.uam.es 
.SH "AUTHOR"
.PP
Dionisio Perez dionisio.perez@estudiante.uam.es 
.SH "Documentación de los 'defines'"
.PP 
.SS "#define COM_ERROR   -1"

.SS "#define COM_OK   0"

.SS "#define COM_QUIT   -2"

.SS "#define FMOTD   'misc/\fBmotd\fP'"
Archivo del motd 
.SS "#define FMOTDOFFENSIVE   'misc/motdoffensive'"

.SS "#define MOTD_SCRIPT   'misc/motd\&.bash'"

.SH "Documentación de los 'typedefs'"
.PP 
.SS "typedef \fBstatus\fP(* ArrayComandos)(char *, \fBpDatosMensaje\fP)"

.SS "typedef struct \fB_datosMensaje\fP  \fBDatosMensaje\fP"

.SS "typedef struct \fB_datosMensaje\fP * \fBpDatosMensaje\fP"

.SH "Documentación de las funciones"
.PP 
.SS "\fBstatus\fP rutinaPingPong (void)"

.SH "Documentación de las variables"
.PP 
.SS "\fBArrayComandos\fP comandos[IRC_MAX_COMMANDS]"
Declaramos el array de comandos con el numero maximo de comandos 
.SH "Autor"
.PP 
Generado automáticamente por Doxygen para Practica RedesII del código fuente\&.
